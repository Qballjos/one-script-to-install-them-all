version: "3"
services:
  
  ## Media Interfaces
  # Plex Server
  plex:
    image: linuxserver/jellyfin
    container_name: jellyfin
    hostname: jellyfin
    volumes:
      - ${BASE_DIR}/jellyfin/config:/config
      - ${MEDIA_DIR}/TV:/data/tv
      - ${MEDIA_DIR}/Movies:/data/movies
      - ${MEDIA_DIR}/Music:/data/music
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIMEZONE}
    ports:
      - 8096:8096
      - 8920:8920
    restart: always

  ## /Media Interfaces

  ## Downloaders
  jackett:
    image: linuxserver/jackett:latest
    container_name: jackett
    volumes:
      - ${BASE_DIR}/jackett/config:/config
      - ${BASE_DIR}/jackett/blackhole:/downloads
      - /etc/localtime:/etc/localtime:ro
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIMEZONE}
    ports:
      - 9117:9117
    restart: always
  qbittorrent:
    image: binhex/arch-qbittorrentvpn:latest
    container_name: qbittorrent
    volumes:
      - ${BASE_DIR}/qbittorrent:/data
      - ${BASE_DIR}/qbittorrent:/config
      - /etc/localtime:/etc/localtime:ro
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIMEZONE}
      - VPN_ENABLED=${VPN_ENABLED}
      - VPN_USER=${VPN_USER}
      - VPN_PASS=${VPN_PASS}
      - VPN_PROV=custom
      - ENABLE_PRIVOXY=${ENABLE_PRIVOXY}
      - LAN_NETWORK=${LAN_NETWORK}
      - NAME_SERVERS=${NAME_SERVERS}
      - DEBUG=false
      - WEBUI_PORT=8080
    ports:
      - 6881:6881
      - 8080:8080
      - 8118:8118
      - 6881:6881/udp
    restart: always

  ## / Downloaders

  ## Searchers
  # Sonarr
  sonarr:
    image: linuxserver/sonarr:latest
    container_name: sonarr
    volumes: 
      - ${BASE_DIR}/sonarr/config:/config
      - ${MEDIA_DIR}/TV:/tv
      - ${DOWNLOAD_DIR}:/downloads
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIMEZONE}
    ports:
      - 8989:8989
    restart: always

  # Radarr
  radarr:
    image: linuxserver/radarr:latest
    container_name: radarr
    volumes:
      - ${BASE_DIR}/radarr/config:/config
      - ${MEDIA_DIR}/Movies:/movies
      - ${DOWNLOAD_DIR}:/downloads
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIMEZONE}
    ports:
      - 7878:7878
    restart: always

  # Lidarr
  lidarr:
    image: linuxserver/lidarr:latest
    container_name: lidarr
    volumes:
      - ${BASE_DIR}/lidarr/config:/config
      - ${MEDIA_DIR}/Music:/music
      - ${DOWNLOAD_DIR}:/downloads
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIMEZONE}
    ports:
      - 8686:8686
    restart: always
  ## /Searchers

  ## Helper Apps
  # Organizr
  Organizr:
    image: linuxserver/organizr:latest
    container_name: organizr
    volumes:
      - ${BASE_DIR}/organizr/config:/config
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIMEZONE}
    ports:
      - 180:80
      - 1443:443
    restart: always

  # Portainer  
  Portainer:
    image: portainer/portainer:latest
    container_name: portainer
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
      - ${BASE_DIR}/portainer/data:/data
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIMEZONE}
    ports:
      - 9000:9000
      - 8000:8000
    restart: always

  # Let's encrypt
  letsencrypt:
    image: linuxserver/letsencrypt
    container_name: letsencrypt
    cap_add:
      - NET_ADMIN
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TIMEZONE}
      - URL=${DOMAIN}
      - SUBDOMAINS=${SUBDOMAINS}
      - VALIDATION=http
      - EMAIL=${EMAIL}
      - DHLEVEL=2048 #optional
      - ONLY_SUBDOMAINS=${ONLY_SUBDOMAINS}
      - EXTRA_DOMAINS=${EXTRA_DOMAINS} #optional
      - STAGING=false #optional
    volumes:
      - ${BASE_DIR}/letsencrypt/config:/config
    ports:
      - 443:443
      - 80:80 #optional
    restart: unless-stopped
  ## /Helper Apps

  ## Watchtower Updater
  watchtower:
    image: containrrr/watchtower:latest
    container_name: watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command:
      - --cleanup --schedule "0 0 2 * * *"
    restart: unless-stopped
  ## /Watchtower Updater